{
    "openapi": "3.0.0",
    "info": {
        "title": "This is the API documentation for the Elonica project.",
        "description": "This is the API documentation for the Elonica project.",
        "contact": {
            "email": "pavlito97@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Авторизация.",
                "operationId": "App\\Http\\Api\\Auth\\LoginController::login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь авторизован."
                    },
                    "422": {
                        "description": "Не удалось авторизоватсья."
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Обновление токена доступа.",
                "operationId": "App\\Http\\Api\\Auth\\LoginController::refresh",
                "responses": {
                    "200": {
                        "description": "Токен обновлен."
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Выход из игры.",
                "operationId": "App\\Http\\Api\\Auth\\LoginController::logout",
                "responses": {
                    "200": {
                        "description": "Пользователь вышел из игры."
                    }
                }
            }
        },
        "/password/create": {
            "post": {
                "tags": [
                    "password"
                ],
                "description": "Отправляет письмо на почту для вотановления аккаунта.",
                "operationId": "App\\Http\\Api\\Auth\\PasswordResetController::create",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Письмо дял востановления аккаунта отправлено на почту."
                    },
                    "422": {
                        "description": "Ошибка валидации."
                    }
                }
            }
        },
        "/password/find{token}": {
            "get": {
                "tags": [
                    "password"
                ],
                "description": "Ищет и токен востановления пароля.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен найден."
                    },
                    "404": {
                        "description": "Токен не найден."
                    },
                    "422": {
                        "description": "Не корректный токен."
                    }
                }
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "password"
                ],
                "description": "Сохраняет новый пароль.",
                "operationId": "App\\Http\\Api\\Auth\\PasswordResetController::reset",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пароль изменен."
                    },
                    "404": {
                        "description": "Токен или email не найден."
                    },
                    "422": {
                        "description": "Некоррректный пароль или пароль совпадает со старым паролем."
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Регистрирует новый аккаунт.",
                "operationId": "App\\Http\\Api\\Auth\\RegisterController::register",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Игрок успешно зарегистрирован."
                    },
                    "404": {
                        "description": "Игрок не найден."
                    }
                }
            }
        },
        "/users/createCharacter": {
            "post": {
                "tags": [
                    "users"
                ],
                "description": "Регистрирует новый аккаунт.",
                "operationId": "App\\Http\\Api\\Auth\\RegisterController::createCharacter",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "class",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Персонаж успешно создан."
                    },
                    "422": {
                        "description": "Нельзя создать персонажа."
                    }
                }
            }
        },
        "/friends/{id}": {
            "post": {
                "tags": [
                    "friends"
                ],
                "description": "Добавляет игрока в друзья.",
                "operationId": "App\\Http\\Api\\Controllers\\FriendController::add",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Игрок успешно добавлен в друзья."
                    },
                    "422": {
                        "description": "Нельзя добавить самого себя в друзья."
                    },
                    "404": {
                        "description": "Игрок не найден."
                    }
                }
            },
            "delete": {
                "tags": [
                    "friends"
                ],
                "description": "Удаляет игрока из списка друзей.",
                "operationId": "App\\Http\\Api\\Controllers\\FriendController::deleteFriend",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Игрок успешно удален из списка друзей."
                    },
                    "404": {
                        "description": "Игрок не найден."
                    }
                }
            }
        },
        "/friends": {
            "get": {
                "tags": [
                    "friends"
                ],
                "description": "Получить список друзей.",
                "operationId": "App\\Http\\Api\\Controllers\\FriendController::getFriends",
                "responses": {
                    "200": {
                        "description": "Список друзей."
                    },
                    "404": {
                        "description": "Список друзей пуст."
                    }
                }
            }
        },
        "/messages/{id}/{offset}": {
            "get": {
                "tags": [
                    "messages"
                ],
                "description": "Возвращает историю переписки с другим пользователем.",
                "operationId": "App\\Http\\Api\\Controllers\\MessageController::chatHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает список сообщений."
                    },
                    "404": {
                        "description": "Сообщения не найдены."
                    }
                }
            }
        },
        "/messages/{id}": {
            "post": {
                "tags": [
                    "messages"
                ],
                "description": "Отправляет сообщение игроку.",
                "operationId": "App\\Http\\Api\\Controllers\\MessageController::sendMessage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Сообщение отправленно."
                    },
                    "404": {
                        "description": "Пользователь не найден."
                    },
                    "422": {
                        "description": "Не удалось отправить сообщение."
                    }
                }
            },
            "delete": {
                "tags": [
                    "messages"
                ],
                "description": "Удаляет сообщение.",
                "operationId": "App\\Http\\Api\\Controllers\\MessageController::deleteMessage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Игрок успешно удален из списка друзей."
                    },
                    "404": {
                        "description": "Игрок не найден."
                    },
                    "422": {
                        "description": "Не удалось удалить сообщение."
                    }
                }
            }
        },
        "/stat/": {
            "get": {
                "tags": [
                    "stat"
                ],
                "description": "Возвращает характеристики персонажа.",
                "operationId": "App\\Http\\Api\\Controllers\\StatController::getStats",
                "responses": {
                    "200": {
                        "description": "Характеристики персонажа."
                    },
                    "401": {
                        "description": "Unauthorized."
                    }
                }
            },
            "post": {
                "tags": [
                    "stat"
                ],
                "description": "Увеличивает характеристики персонажа.",
                "operationId": "App\\Http\\Api\\Controllers\\StatController::increaseStats",
                "responses": {
                    "200": {
                        "description": "Характеристики персонажа увеличены."
                    },
                    "422": {
                        "description": "Переданы некоректные значения характеристик."
                    },
                    "401": {
                        "description": "Unauthorized."
                    }
                }
            }
        },
        "/users/mailConfirmCreate/": {
            "post": {
                "tags": [
                    "users"
                ],
                "description": "Отправляет письмо для подтверждения почты.",
                "operationId": "App\\Http\\Api\\Controllers\\UserController::mailConfirmCreate",
                "responses": {
                    "200": {
                        "description": "Письмо отправленно."
                    },
                    "404": {
                        "description": "Токен не найден."
                    },
                    "422": {
                        "description": "Ваша почта уже подтверждена."
                    }
                }
            }
        },
        "/users/mailConfirm/{token}": {
            "post": {
                "tags": [
                    "users"
                ],
                "description": "Подтверждает почту.",
                "operationId": "App\\Http\\Api\\Controllers\\UserController::mailConfirm",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Почта подтверждена."
                    },
                    "404": {
                        "description": "Токен не найден."
                    },
                    "422": {
                        "description": "Почта подтверждена."
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "greeting",
            "description": "Sample package to test out the greeting APIs"
        }
    ]
}